apiVersion: apps/v1
kind: Deployment
metadata:
  name: tensorboard
spec:
  replicas: 1
  selector:
    matchLabels:
      app: tensorboard
  template:
    metadata:
      labels:
        app: tensorboard
    spec:
      volumes:
      - name: cluster-file-system
        persistentVolumeClaim:
          claimName: {{ .Values.tensorboard.persistentVolumeClaim }}
      containers:
      - name: tensorboard
        image: "{{.Values.tensorboard.image}}"
        command: 
        - bash
        - -c
        - |
          apt install net-tools
          IP=$(ifconfig | grep -Eo "inet (addr:)?([0-9]*\.){3}[0-9]*" | grep -Eo "([0-9]*\.){3}[0-9]*" | grep -v "127.0.0.1")
          tensorboard --logdir $TENSORBOARD_LOG_DIRECTORY --host $IP

        env:
        - name: TENSORBOARD_LOG_DIRECTORY
          value: "{{ .Values.tensorboard.logDirectory }}"
        ports:
        - name: web
          containerPort: 6006
        volumeMounts:
        - name: cluster-file-system
          mountPath: "/mnt"
---
apiVersion: v1
kind: Service
metadata:
  name: tensorboard
spec:
  clusterIP: None
  selector:
    app: tensorboard
  ports:
  - name: web
    port: 6006
---
apiVersion: v1
kind: Pod
metadata:
  name: inverse-proxy-to-tensorboard
spec:
  serviceAccountName: default
  containers:
  - name: inverse-proxy-to-tensorboard
    image: "{{.Values.inverseProxy.image}}"
    command: ["/opt/proxy/attempt-register-vm-on-proxy.sh"]
    args: ["{{ .Values.inverseProxy.upstreamService }}", "{{ .Values.inverseProxy.upstreamPort }}"]
    ports:
    - containerPort: 80
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: inverse-proxy-config
---
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: inverse-proxy-role
rules:
- apiGroups: [""]
  resources: ["configmaps"]
  verbs: ["get", "list", "create", "update", "patch", "delete"]
---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: inverse-proxy-role-binding
subjects:
- kind: ServiceAccount
  name: default
roleRef:
  kind: Role
  name: inverse-proxy-role
  apiGroup: rbac.authorization.k8s.io
